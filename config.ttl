@prefix :        <#> .
@prefix fuseki:  <http://jena.apache.org/fuseki#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix tdb:     <http://jena.hpl.hp.com/2008/tdb#> .
@prefix ja:      <http://jena.hpl.hp.com/2005/11/Assembler#> .
@prefix text:    <http://jena.apache.org/text#> .


[] rdf:type fuseki:Server ;
   # Timeout - server-wide default: milliseconds.
   # Format 1: "1000" -- 1 second timeout
   # Format 2: "10000,60000" -- 10s timeout to first result, then 60s timeout to for rest of query.
   # See java doc for ARQ.queryTimeout
   # ja:context [ ja:cxtName "arq:queryTimeout" ;  ja:cxtValue "10000" ] ;
   # ja:loadClass "your.code.Class" ;
   fuseki:services (
     <#core>
     <#user>
   ) .

# TDB
[] ja:loadClass "com.hp.hpl.jena.tdb.TDB" .
tdb:DatasetTDB  rdfs:subClassOf  ja:RDFDataset .
tdb:GraphTDB    rdfs:subClassOf  ja:Model .

# Text
[] ja:loadClass "org.apache.jena.query.text.TextQuery" .
text:TextDataset      rdfs:subClassOf   ja:RDFDataset .
text:TextIndexLucene  rdfs:subClassOf   text:TextIndex .

 # Core service configuration

<#core>  rdf:type fuseki:Service ;
    fuseki:name                   "core" ;       # http://host:port/core
    fuseki:dataset           <#search_dataset> ; # Public APIs
    # Public
    fuseki:serviceQuery           "sparql" ;     # http://host:port/core/sparql?query=...
    fuseki:serviceReadGraphStore  "get" ;        # http://host:post/core/get?graph=default
    # Protect these paths!
    fuseki:serviceReadWriteGraphStore    "data" ; # http://host:port/core/data?query=...
    fuseki:serviceUpdate          "update" ;     # http://host:port/core/update?query=...
    fuseki:serviceUpload          "upload" ;     # http://host:post/core/upload?graph="any"   
    .
	
 # Searchable dataset  

 <#search_dataset> rdf:type     text:TextDataset ;
    text:dataset   <#core_dataset> ;
    text:index     <#indexLucene> ;
    .
    
<#core_dataset> rdf:type tdb:DatasetTDB ;
    tdb:location "CORE_TDB" ;
    tdb:unionDefaultGraph   true ;
    # Query timeout on this dataset (1s, 1000 milliseconds)
    # ja:context [ ja:cxtName "arq:queryTimeout" ;  ja:cxtValue "1000" ] ;
    .

<#user>  rdf:type fuseki:Service ;
    fuseki:name                   "users" ;    # http://host:port/users
    fuseki:dataset <#user_dataset> ;
    # Public APIs
    fuseki:serviceQuery           "sparql" ;     # http://host:port/profile/sparql?query=...
    fuseki:serviceReadGraphStore  "get" ;        # http://host:post/profile/get?graph=default
    # Protect these paths!
    fuseki:serviceReadWriteGraphStore    "data" ; # http://host:port/core/data?query=...
    fuseki:serviceUpdate          "update" ;     # http://host:port/profile/update?query=...
    fuseki:serviceUpload          "upload" ;     # http://host:post/profile/upload?graph="any"   
    .

<#user_dataset> rdf:type tdb:DatasetTDB ;
    tdb:location "USERS_TDB" ;
    # Query timeout on this dataset (1s, 1000 milliseconds)
    # ja:context [ ja:cxtName "arq:queryTimeout" ;  ja:cxtValue "1000" ] ;
    . 
	
# Text index description
<#indexLucene> a text:TextIndexLucene ;
    text:directory <file:Lucene> ;
    ##text:directory "mem" ;
	##text:storeValues true;  
    text:entityMap <#entMap> ;
    .

# Mapping in the index
# URI stored in field "uri"
# rdfs:label is mapped to field "text"
<#entMap> a text:EntityMap ;
    text:entityField      "uri" ;
    text:graphField       "graph" ; ## enable graph-specific indexing
    text:defaultField     "label" ; ## Must be defined in the text:map
	#text:uidField         "uid" ;   
    text:map (
         # rdfs:label
         [ text:field "label" ;
           text:predicate rdfs:label ;
           text:analyzer [ a text:LowerCaseKeywordAnalyzer ] ]
         # rdfs:comment
         [ text:field "comment" ;
           text:predicate rdfs:comment ;
           text:analyzer [ a text:LowerCaseKeywordAnalyzer ] ]
         ) .
